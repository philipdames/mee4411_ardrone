<launch>
  <!-- Basic simulation setup-->
  <arg name="mav_name" default="ardrone"/>
  <arg name="paused" default="true"/>
  <arg name="rviz_on" default="true"/>
  <!-- Path planner-->
  <arg name="rrt_type" default="rrt"/>
  
  <arg name="x_start" default="3.0"
       doc="Initial x position of the MAV"/>
  <arg name="y_start" default="1.0"
       doc="Initial y position of the MAV"/>
  <arg name="z_start" default="2.0"
       doc="Initial z position of the MAV"/>
  
  <arg name="x_goal" default="5.0"
       doc="Final x position of the MAV"/>
  <arg name="y_goal" default="19.0"
       doc="Final y position of the MAV"/>
  <arg name="z_goal" default="2.5"
       doc="Final z position of the MAV"/>
  <arg name="a_goal" default="1.5"
       doc="Final yaw of the MAV"/>
  
  <arg name="map_frame_id" default="world"/>
  <arg name="map_filename" default="$(find project2_sandbox)/config/map0.yaml"/>
  
  <!-- Include launch file from phase1-->
  <include file="$(find ardrone_phase1)/launch/phase1.launch">
    <arg name="mav_name" value="$(arg mav_name)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="rviz_on" value="$(arg rviz_on)"/>
    <arg name="rrt_type" value="$(arg rrt_type)"/>
    <arg name="x" value="$(arg x_start)"/>
    <arg name="y" value="$(arg y_start)"/>
    <arg name="z" value="$(arg z_start)"/>
    <arg name="frame_id" value="$(arg map_frame_id)"/>
    <arg name="map_filename" value="$(arg map_filename)"/>
  </include>
  
  <group ns="$(arg mav_name)">
    <!-- Drone controller to follow trajectory-->
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <!-- Check for collsions with blocks-->
    <node name="safety_check" pkg="ardrone_phase2" type="safety_check.py" output="screen" required="true">
      <param name="map_frame_id" value="$(arg map_frame_id)"/>
      <rosparam command="load" file="$(arg map_filename)" />
    </node>
    <!-- Publish goal for drone-->
    <node name="publish_goal" pkg="ardrone_phase2" type="publish_goal.py" output="screen">
      <param name="x_start" value="$(arg x_start)"/>
      <param name="y_start" value="$(arg y_start)"/>
      <param name="z_start" value="$(arg z_start)"/>
      <param name="a_start" value="0.0"/>
      <param name="x_goal" value="$(arg x_goal)"/>
      <param name="y_goal" value="$(arg y_goal)"/>
      <param name="z_goal" value="$(arg z_goal)"/>
      <param name="a_goal" value="$(arg a_goal)"/>
    </node>
    <!-- Compute trajectory from path-->
    <node name="trajectory_node" pkg="ardrone_phase2" type="trajectory_node.py" output="screen">
      <param name="v_desired" value="1.0"/>
      <param name="corner_radius" value="0.01"/>
    </node>
  </group>
</launch>
